pint.ok -l debug --no-color lint rules
! stdout .
cmp stderr stderr.txt

-- stderr.txt --
level=info msg="Loading configuration file" path=.pint.hcl
level=info msg="File parsed" path=rules/0001.yml rules=3
level=debug msg="Found alerting rule" alert=first lines=1-3 path=rules/0001.yml
level=debug msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp"] path=rules/0001.yml rule=first
level=debug msg="Found recording rule" lines=5-6 path=rules/0001.yml record=second
level=debug msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp","promql/aggregate(job:true)"] path=rules/0001.yml rule=second
level=debug msg="Found alerting rule" alert=third lines=8-9 path=rules/0001.yml
level=debug msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp"] path=rules/0001.yml rule=third
rules/0001.yml:6: job label is required and should be preserved when aggregating "^.+$" rules, use by(job, ...) (promql/aggregate)
  expr: sum(bar)

-- rules/0001.yml --
- alert: first
  expr: foo > 1
  for: 1m

- record: second
  expr: sum(bar)

- alert: third
  expr: count(foo) > 0

-- .pint.hcl --
prometheus "disabled" {
  uri     = "http://127.0.0.1:123"
  timeout = "5s"
  required = true
  paths = ["invalid/.+"]
}
rule {
    match {
      kind = "recording"
    }
    aggregate ".+" {
        keep = [ "job" ]
    }
}
