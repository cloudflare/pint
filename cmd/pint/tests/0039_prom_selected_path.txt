pint.ok -l debug --no-color lint rules
! stdout .
cmp stderr stderr.txt

-- stderr.txt --
level=INFO msg="Loading configuration file" path=.pint.hcl
level=INFO msg="Finding all rules to check" paths=["rules"]
level=DEBUG msg="File parsed" path=rules/0001.yml rules=3
level=DEBUG msg="Glob finder completed" count=3
level=INFO msg="Configured new Prometheus server" name=disabled uris=1 uptime=up tags=[] include=["^invalid/.+$"] exclude=["^invalid/rules/.+$"]
level=DEBUG msg="Starting query workers" name=disabled uri=http://127.0.0.1:123 workers=16
level=DEBUG msg="Generated all Prometheus servers" count=1
level=DEBUG msg="Found alerting rule" path=rules/0001.yml alert=first lines=1-3
level=DEBUG msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp","rule/topk"] path=rules/0001.yml rule=first
level=DEBUG msg="Found recording rule" path=rules/0001.yml record=second lines=5-6
level=DEBUG msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp","rule/topk","promql/aggregate(job:true)"] path=rules/0001.yml rule=second
level=DEBUG msg="Found alerting rule" path=rules/0001.yml alert=third lines=8-9
level=DEBUG msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp","rule/topk"] path=rules/0001.yml rule=third
rules/0001.yml:6 Warning: `job` label is required and should be preserved when aggregating `^.+$` rules, use `by(job, ...)`. (promql/aggregate)
 6 |   expr: sum(bar)

level=INFO msg="Problems found" Warning=1
level=DEBUG msg="Stopping query workers" name=disabled uri=http://127.0.0.1:123
-- rules/0001.yml --
- alert: first
  expr: foo > 1
  for: 1m

- record: second
  expr: sum(bar)

- alert: third
  expr: count(foo) > 0

-- invalid/rules/0001.yml --
- alert: first
  expr: foo > 1
  for: 1m
-- .pint.hcl --
parser {
  relaxed = [".*"]
}
prometheus "disabled" {
  uri     = "http://127.0.0.1:123"
  timeout = "5s"
  required = true
  include  = ["invalid/.+"]
  exclude  = ["invalid/rules/.+"]
}
rule {
    match {
      kind = "recording"
    }
    aggregate ".+" {
        keep = [ "job" ]
    }
}
