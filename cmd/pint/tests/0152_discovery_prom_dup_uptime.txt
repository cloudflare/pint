http response prometheus /api/v1/query 200 {"status":"success","data":{"resultType":"vector","result":[{"metric":{"name":"prom1"},"value":[1698249632.491,"1"]},{"metric":{"name":"prom2"},"value":[1698249632.491,"1"]}]}}
http start prometheus 127.0.0.1:7152

pint.ok -l debug --no-color lint rules
! stdout .
cmp stderr stderr.txt

-- stderr.txt --
level=INFO msg="Loading configuration file" path=.pint.hcl
level=INFO msg="Finding all rules to check" paths=["rules"]
level=DEBUG msg="File parsed" path=rules/0001.yml rules=1
level=DEBUG msg="Glob finder completed" count=1
level=DEBUG msg="Starting query workers" name=discovery uri=http://127.0.0.1:7152 workers=1
level=INFO msg="Finding Prometheus servers using Prometheus API query" uri=http://127.0.0.1:7152 query=prometheus_ready
level=DEBUG msg="Scheduling prometheus query" uri=http://127.0.0.1:7152 query=prometheus_ready
level=DEBUG msg="Running prometheus query" uri=http://127.0.0.1:7152 query=prometheus_ready
level=DEBUG msg="Parsed response" uri=http://127.0.0.1:7152 query=prometheus_ready series=2
level=DEBUG msg="Rendered Prometheus server" name=prom-ha uri=https://prom1.example.com headers=[] timeout=5s concurrency=16 rateLimit=100 uptime=prom1 tags=[] required=false
level=DEBUG msg="Rendered Prometheus server" name=prom-ha uri=https://prom2.example.com headers=[] timeout=5s concurrency=16 rateLimit=100 uptime=prom1 tags=[] required=false
level=DEBUG msg="Stopping query workers" name=discovery uri=http://127.0.0.1:7152
level=DEBUG msg="Added new failover URI" name=prom-ha uri=https://prom2.example.com
level=DEBUG msg="Starting query workers" name=discovery uri=http://127.0.0.1:7152 workers=1
level=INFO msg="Finding Prometheus servers using Prometheus API query" uri=http://127.0.0.1:7152 query=prometheus_ready
level=DEBUG msg="Scheduling prometheus query" uri=http://127.0.0.1:7152 query=prometheus_ready
level=DEBUG msg="Running prometheus query" uri=http://127.0.0.1:7152 query=prometheus_ready
level=DEBUG msg="Parsed response" uri=http://127.0.0.1:7152 query=prometheus_ready series=2
level=DEBUG msg="Rendered Prometheus server" name=prom-ha uri=https://prom1.example.com headers=[] timeout=5s concurrency=16 rateLimit=100 uptime=prom2 tags=[] required=false
level=DEBUG msg="Rendered Prometheus server" name=prom-ha uri=https://prom2.example.com headers=[] timeout=5s concurrency=16 rateLimit=100 uptime=prom2 tags=[] required=false
level=DEBUG msg="Stopping query workers" name=discovery uri=http://127.0.0.1:7152
level=INFO msg="Configured new Prometheus server" name=prom-ha uris=2 uptime=prom1 tags=[] include=[] exclude=["^.*$"]
level=DEBUG msg="Starting query workers" name=prom-ha uri=https://prom1.example.com workers=16
level=DEBUG msg="Starting query workers" name=prom-ha uri=https://prom2.example.com workers=16
level=DEBUG msg="Generated all Prometheus servers" count=1
level=DEBUG msg="Found recording rule" path=rules/0001.yml record=sum:up lines=4-5
level=DEBUG msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp","rule/topk"] path=rules/0001.yml rule=sum:up
level=DEBUG msg="Stopping query workers" name=prom-ha uri=https://prom1.example.com
level=DEBUG msg="Stopping query workers" name=prom-ha uri=https://prom2.example.com
-- rules/0001.yml --
groups:
- name: foo
  rules:
  - record: sum:up
    expr: sum(up)
-- .pint.hcl --
discovery {
  prometheusQuery {
    uri = "http://127.0.0.1:7152"
    query = "prometheus_ready"
    template {
      name     = "prom-ha"
      uri      = "https://{{ $name }}.example.com"
      timeout  = "5s"
      uptime   = "prom1"
      exclude  = [".*"]
    }
  }
  prometheusQuery {
    uri = "http://127.0.0.1:7152"
    query = "prometheus_ready"
    template {
      name     = "prom-ha"
      uri      = "https://{{ $name }}.example.com"
      timeout  = "5s"
      uptime   = "prom2"
      exclude  = [".*"]
    }
  }
}
