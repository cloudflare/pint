http response prometheus /api/v1/query 200 {"status":"success","data":{"resultType":"vector","result":[]}}
http start prometheus 127.0.0.1:7148

exec pint -l debug --no-color lint rules
! stdout .
cmp stderr stderr.txt

-- stderr.txt --
level=INFO msg="Loading configuration file" path=.pint.hcl
level=DEBUG msg="Adding pint config to the parser exclude list" path=.pint.hcl
level=INFO msg="Finding all rules to check" paths=["rules"]
level=DEBUG msg="File parsed" path=rules/0001.yml rules=1
level=DEBUG msg="Glob finder completed" count=1
level=INFO msg="Checking Prometheus rules" entries=1 workers=10 online=true
level=DEBUG msg="Starting query workers" name=discovery uri=http://127.0.0.1:7148 workers=1
level=INFO msg="Finding Prometheus servers using Prometheus API query" uri=http://127.0.0.1:7148 query=prometheus_ready
level=DEBUG msg="Scheduling prometheus query" uri=http://127.0.0.1:7148 query=prometheus_ready
level=DEBUG msg="Running prometheus query" uri=http://127.0.0.1:7148 query=prometheus_ready
level=DEBUG msg="Parsed response" uri=http://127.0.0.1:7148 query=prometheus_ready series=0
level=DEBUG msg="Stopping query workers" name=discovery uri=http://127.0.0.1:7148
level=DEBUG msg="Generated all Prometheus servers" count=0
level=DEBUG msg="Found recording rule" path=rules/0001.yml record=sum:up lines=4-5 state=noop
level=DEBUG msg="Configured checks for rule" enabled=["promql/syntax","alerts/for","alerts/comparison","alerts/template","promql/fragile","promql/regexp","promql/impossible"] path=rules/0001.yml rule=sum:up
-- rules/0001.yml --
groups:
- name: foo
  rules:
  - record: sum:up
    expr: sum(up)
-- .pint.hcl --
discovery {
  prometheusQuery {
    uri = "http://127.0.0.1:7148"
    query = "prometheus_ready"
    template {
      name     = "{{ $name }}"
      uri      = "https://{{ $name }}.example.com"
      failover = [
        "https://{{ $name }}-backup.example.com"
      ]
      timeout  = "5s"
      headers = {
        "X-Host": "hostname={{ $name }}"
      }
      required = true
      tags     = [
        "name/{{ $name }}"
      ]
    }
  }
}
