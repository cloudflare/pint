env NO_COLOR=1
! exec pint --no-color lint --min-severity=info rules
! stdout .
cmp stderr stderr.txt

-- stderr.txt --
level=INFO msg="Loading configuration file" path=.pint.hcl
level=INFO msg="Finding all rules to check" paths=["rules"]
level=INFO msg="Checking Prometheus rules" entries=17 workers=10 online=true
Warning: required label is being removed via aggregation (promql/aggregate)
  ---> rules/0001.yml:2
1 | - record: colo_job:fl_cf_html_bytes_in:rate10m
2 |   expr: sum(rate(fl_cf_html_bytes_in[10m])) WITHOUT (colo_id, instance, node_type, region, node_status, job, colo_name)
                                                ^^^^^^^^ Query is using aggregation with `without(colo_id, instance, node_type, region, node_status, job, colo_name)`, all labels included inside `without(...)` will be removed from the results.
                                                         `job` label is required and should be preserved when aggregating all rules.

Warning: label must be removed in aggregations (promql/aggregate)
  ---> rules/0001.yml:6
5 | - record: colo_job:foo:irate3m
6 |   expr: sum(irate(foo[3m])) WITHOUT (colo_id)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `instance` label should be removed when aggregating `^colo(?:_.+)?:.+$` rules.

Warning: redundant regexp (promql/regexp)
  ---> rules/0002.yaml:2
1 | - record: colo_job:down:count
2 |   expr: up{job=~"foo"} == 0
            ^^^^^^^^^^^^^^ Unnecessary regexp match on static string `job=~"foo"`, use `job="foo"` instead.

Warning: redundant regexp (promql/regexp)
  ---> rules/0002.yaml:5
4 | - record: colo_job:down:count
5 |   expr: up{job!~"foo"} == 0
            ^^^^^^^^^^^^^^ Unnecessary regexp match on static string `job!~"foo"`, use `job!="foo"` instead.

Warning: label must be removed in aggregations (promql/aggregate)
  ---> rules/0003.yaml:11
10 | - record: colo_job:up:count
11 |   expr: sum(foo) without(job)
             ^^^^^^^^^^^^^^^^^^^^^ `instance` label should be removed when aggregating `^colo(?:_.+)?:.+$` rules.

Warning: required label is being removed via aggregation (promql/aggregate)
  ---> rules/0003.yaml:11
10 | - record: colo_job:up:count
11 |   expr: sum(foo) without(job)
                      ^^^^^^^ Query is using aggregation with `without(job)`, all labels included inside `without(...)` will be removed from the results.
                              `job` label is required and should be preserved when aggregating all rules.

Fatal: PromQL syntax error (promql/syntax)
  ---> rules/0003.yaml:14
13 | - record: invalid
14 |   expr: sum(foo) by ())
             ^^^^^^^^^^^^^^^ unexpected right parenthesis ')'

Warning: required label is being removed via aggregation (promql/aggregate)
  ---> rules/0003.yaml:23-25
21 | - record: colo:multiline
22 |   expr: |
23 |     sum(
24 |       multiline
                   ^ Query is using aggregation with `without(job, instance)`, all labels included inside `without(...)` will be removed from the results.
                     `job` label is required and should be preserved when aggregating all rules.
25 |     ) without(job, instance)
     ^^^^^ Query is using aggregation with `without(job, instance)`, all labels included inside `without(...)` will be removed from the results.
           `job` label is required and should be preserved when aggregating all rules.

Warning: label must be removed in aggregations (promql/aggregate)
  ---> rules/0003.yaml:29-31
27 | - record: colo:multiline:sum
28 |   expr: |
29 |     sum(sum) without(job)
         ^^^^^^^^^^^^^^^^^^^^^ `instance` label should be removed when aggregating `^colo(?:_.+)?:.+$` rules.
30 |     +
31 |     sum(sum) without(job)

Warning: required label is being removed via aggregation (promql/aggregate)
  ---> rules/0003.yaml:29-31
27 | - record: colo:multiline:sum
28 |   expr: |
29 |     sum(sum) without(job)
                  ^^^^^^^ Query is using aggregation with `without(job)`, all labels included inside `without(...)` will be removed from the results.
                          `job` label is required and should be preserved when aggregating all rules.
30 |     +
31 |     sum(sum) without(job)

Warning: required label is being removed via aggregation (promql/aggregate)
  ---> rules/0003.yaml:35-37
33 | - record: colo:multiline2
34 |   expr: >-
35 |     sum(
36 |       multiline2
                    ^ Query is using aggregation with `without(job, instance)`, all labels included inside `without(...)` will be removed from the results.
                      `job` label is required and should be preserved when aggregating all rules.
37 |     ) without(job, instance)
     ^^^^^ Query is using aggregation with `without(job, instance)`, all labels included inside `without(...)` will be removed from the results.
           `job` label is required and should be preserved when aggregating all rules.

Warning: label must be removed in aggregations (promql/aggregate)
  ---> rules/0003.yaml:40
39 | - record: colo_job:up:byinstance
40 |   expr: sum(byinstance) by(instance)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `instance` label should be removed when aggregating `^colo(?:_.+)?:.+$` rules.

Warning: required label is being removed via aggregation (promql/aggregate)
  ---> rules/0003.yaml:40
39 | - record: colo_job:up:byinstance
40 |   expr: sum(byinstance) by(instance)
                             ^^ Query is using aggregation with `by(instance)`, only labels included inside `by(...)` will be present on the results.
                                `job` label is required and should be preserved when aggregating all rules.

Information: use humanize filters for the results (alerts/template)
  ---> rules/0003.yaml:58-61
57 | - alert: Error Rate
58 |   expr: sum(rate(errors[5m])) > 0.5
                 ^^^^^^^^^^^^^^^^ `rate()` will produce results that are hard to read for humans.
59 |   annotations:
60 |     link: http://docs
61 |     summary: 'error rate: {{ $value }}'
                  ^^^^^^^^^^^^^^^^^^^^^^^^ Use one of humanize template functions to make the result more readable.

level=INFO msg="Problems found" Fatal=1 Warning=12 Information=1
level=ERROR msg="Execution completed with error(s)" err="found 1 problem(s) with severity Bug or higher"
-- rules/0001.yml --
- record: colo_job:fl_cf_html_bytes_in:rate10m
  expr: sum(rate(fl_cf_html_bytes_in[10m])) WITHOUT (colo_id, instance, node_type, region, node_status, job, colo_name)
- record: colo_job:foo:rate1m
  expr: sum(rate(foo[1m])) WITHOUT (instance)
- record: colo_job:foo:irate3m
  expr: sum(irate(foo[3m])) WITHOUT (colo_id)

-- rules/0002.yaml --
- record: colo_job:down:count
  expr: up{job=~"foo"} == 0

- record: colo_job:down:count
  expr: up{job!~"foo"} == 0

-- rules/0003.yaml --
# pint ignore/begin
{%- set foo = 1 %}
{% set bar = 2 -%}
{# comment #}
{#
  comment 
#}
# pint ignore/end

- record: colo_job:up:count
  expr: sum(foo) without(job)

- record: invalid
  expr: sum(foo) by ())

# pint ignore/begin
- record: colo_job:down:count
  expr: up == {{ foo }}
# pint ignore/end

- record: colo:multiline
  expr: |
    sum(
      multiline
    ) without(job, instance)

- record: colo:multiline:sum
  expr: |
    sum(sum) without(job)
    +
    sum(sum) without(job)

- record: colo:multiline2
  expr: >-
    sum(
      multiline2
    ) without(job, instance)

- record: colo_job:up:byinstance
  expr: sum(byinstance) by(instance)

- record: instance_mode:node_cpu:rate4m
  expr:  sum(rate(node_cpu_seconds_total[4m])) without (cpu)

- record: instance_mode:node_cpu:rate4m
  expr:  sum(rate(node_cpu_seconds_total[5m])) without (cpu)

- record: instance_mode:node_cpu:rate5min
  expr:  sum(irate(node_cpu_seconds_total[5m])) without (cpu)

- alert: Instance Is Down
  expr: up == 0

- alert: Error Rate
  expr: sum(rate(errors[5m])) > 0.5

- alert: Error Rate
  expr: sum(rate(errors[5m])) > 0.5
  annotations:
    link: http://docs
    summary: 'error rate: {{ $value }}'

-- .pint.hcl --
parser {
  relaxed = [".*"]
}
rule {
    match {
      kind = "recording"
    }
    aggregate ".+" {
        keep = [ "job" ]
    }
    aggregate "colo(?:_.+)?:.+" {
        strip = [ "instance" ]
    }
}
