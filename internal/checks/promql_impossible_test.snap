
[TestImpossibleCheck/#00 - 1]
- description: ""
  content: |4

      - alert: Device_IO_Errors
        expr: >-
          max without (source_instance) (
            increase(kernel_device_io_errors_total{device!~"loop.+"}[120m]) > 3 unless on(instance, device) (
              increase(kernel_device_io_soft_errors_total{device!~"loop.+"}[125m])*2 > increase(kernel_device_io_errors_total[120m])
            )
            and on(device, instance) absent(node_disk_info)
          ) unless on (instance,device) max(max_over_time(cloudchamber_snapshot_devices[1h])) by (instance,device)
        labels:
          priority: "4"
          component: disk
  output: |
    4 |       max without (source_instance) (
    5 |         increase(kernel_device_io_errors_total{device!~"loop.+"}[120m]) > 3 unless on(instance, device) (
    6 |           increase(kernel_device_io_soft_errors_total{device!~"loop.+"}[125m])*2 > increase(kernel_device_io_errors_total[120m])
    7 |         )
    8 |         and on(device, instance) absent(node_disk_info)
                                         ^^^^^^ The right hand side will never be matched because it doesn't have the `device` label from `on(...)`. The [absent()](https://prometheus.io/docs/prometheus/latest/querying/functions/#absent) function is used to check if provided query doesn't match any time series.
    You will only get any results back if the metric selector you pass doesn't match anything.
    Since there are no matching time series there are also no labels. If some time series is missing you cannot read its labels.
    This means that the only labels you can get back from absent call are the ones you pass to it.
    If you're hoping to get instance specific labels this way and alert when some target is down then that won't work, use the `up` metric instead.
    9 |       ) unless on (instance,device) max(max_over_time(cloudchamber_snapshot_devices[1h])) by (instance,device)
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: |-
            The right hand side will never be matched because it doesn't have the `device` label from `on(...)`. The [absent()](https://prometheus.io/docs/prometheus/latest/querying/functions/#absent) function is used to check if provided query doesn't match any time series.
            You will only get any results back if the metric selector you pass doesn't match anything.
            Since there are no matching time series there are also no labels. If some time series is missing you cannot read its labels.
            This means that the only labels you can get back from absent call are the ones you pass to it.
            If you're hoping to get instance specific labels this way and alert when some target is down then that won't work, use the `up` metric instead.
          pos:
            - line: 4
              firstcolumn: 7
              lastcolumn: 38
            - line: 5
              firstcolumn: 7
              lastcolumn: 106
            - line: 6
              firstcolumn: 7
              lastcolumn: 129
            - line: 7
              firstcolumn: 7
              lastcolumn: 10
            - line: 8
              firstcolumn: 7
              lastcolumn: 56
            - line: 9
              firstcolumn: 7
              lastcolumn: 110
          firstcolumn: 287
          lastcolumn: 292
          kind: 0
    lines:
        first: 4
        last: 9
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/0_>_0 - 1]
- description: 0 > 0
  content: |4

    - alert: Foo
      expr: 0 > bool 0
  output: |
    3 |   expr: 0 > bool 0
                ^ `0 > 0` always evaluates to `0 > 0` and uses the `bool` modifier which means it will always return 0
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: '`0 > 0` always evaluates to `0 > 0` and uses the `bool` modifier which means it will always return 0'
          pos:
            - line: 3
              firstcolumn: 9
              lastcolumn: 18
          firstcolumn: 1
          lastcolumn: 1
          kind: 0
    lines:
        first: 3
        last: 3
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/__name___is_stripped - 1]
- description: __name__ is stripped
  content: |4

    - record: count:sum:foo
      expr: |
        {job="foo"} unless on(__name__) count(sum({job="foo"})) by(__name__)
  output: |
    4 |     {job="foo"} unless on(__name__) count(sum({job="foo"})) by(__name__)
                                                  ^^^^^^^^^^^^^^^^ The right hand side will never be matched because it doesn't have the `__name__` label from `on(...)`. Aggregation removes metric name.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `__name__` label from `on(...)`. Aggregation removes metric name.
          pos:
            - line: 4
              firstcolumn: 5
              lastcolumn: 72
          firstcolumn: 39
          lastcolumn: 54
          kind: 0
    lines:
        first: 4
        last: 4
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/complex_query_with_or_vector() - 1]
- description: complex query with or vector()
  content: |4

      - alert: Foo
        expr: |
          (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
            (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
          > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
            avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
          # Multi-line comment
          # inside the query
          and on (colo_name)
            (colo_job:foo_total:rate2m or vector(0)) > 80
          and on (colo_name)
            (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
        annotations:
          summary: High rejectsion rate in {{ $labels.colo_name }}
  output: |4
     4 |       (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
     5 |         (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
     6 |       > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
     7 |         avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
     8 |       # Multi-line comment
     9 |       # inside the query
    10 |       and on (colo_name)
    11 |         (colo_job:foo_total:rate2m or vector(0)) > 80
                                               ^^^^^^ The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
    12 |       and on (colo_name)
    13 |         (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
          pos:
            - line: 4
              firstcolumn: 7
              lastcolumn: 67
            - line: 5
              firstcolumn: 7
              lastcolumn: 64
            - line: 6
              firstcolumn: 7
              lastcolumn: 83
            - line: 7
              firstcolumn: 7
              lastcolumn: 72
            - line: 8
              firstcolumn: 7
              lastcolumn: 27
            - line: 9
              firstcolumn: 7
              lastcolumn: 25
            - line: 10
              firstcolumn: 7
              lastcolumn: 25
            - line: 11
              firstcolumn: 7
              lastcolumn: 54
            - line: 12
              firstcolumn: 7
              lastcolumn: 25
            - line: 13
              firstcolumn: 7
              lastcolumn: 63
          firstcolumn: 354
          lastcolumn: 359
          kind: 0
    lines:
        first: 4
        last: 13
    severity: 1
    anchor: 0
- description: complex query with or vector()
  content: |4

      - alert: Foo
        expr: |
          (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
            (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
          > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
            avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
          # Multi-line comment
          # inside the query
          and on (colo_name)
            (colo_job:foo_total:rate2m or vector(0)) > 80
          and on (colo_name)
            (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
        annotations:
          summary: High rejectsion rate in {{ $labels.colo_name }}
  output: |4
     4 |       (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
     5 |         (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
     6 |       > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
     7 |         avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
     8 |       # Multi-line comment
     9 |       # inside the query
    10 |       and on (colo_name)
    11 |         (colo_job:foo_total:rate2m or vector(0)) > 80
    12 |       and on (colo_name)
    13 |         (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
                                                         ^^^^^^ The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
          pos:
            - line: 4
              firstcolumn: 7
              lastcolumn: 67
            - line: 5
              firstcolumn: 7
              lastcolumn: 64
            - line: 6
              firstcolumn: 7
              lastcolumn: 83
            - line: 7
              firstcolumn: 7
              lastcolumn: 72
            - line: 8
              firstcolumn: 7
              lastcolumn: 27
            - line: 9
              firstcolumn: 7
              lastcolumn: 25
            - line: 10
              firstcolumn: 7
              lastcolumn: 25
            - line: 11
              firstcolumn: 7
              lastcolumn: 54
            - line: 12
              firstcolumn: 7
              lastcolumn: 25
            - line: 13
              firstcolumn: 7
              lastcolumn: 63
          firstcolumn: 431
          lastcolumn: 436
          kind: 0
    lines:
        first: 4
        last: 13
    severity: 1
    anchor: 0
- description: complex query with or vector()
  content: |4

      - alert: Foo
        expr: |
          (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
            (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
          > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
            avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
          # Multi-line comment
          # inside the query
          and on (colo_name)
            (colo_job:foo_total:rate2m or vector(0)) > 80
          and on (colo_name)
            (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
        annotations:
          summary: High rejectsion rate in {{ $labels.colo_name }}
  output: |4
     4 |       (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
                                                ^^^^^^^^^ `vector(0) / vector(1) > 5 * vector(0) / vector(1)` always evaluates to `0 > 0` which is not possible, so it will never return anything.
     5 |         (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
     6 |       > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
     7 |         avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
     8 |       # Multi-line comment
     9 |       # inside the query
    10 |       and on (colo_name)
    11 |         (colo_job:foo_total:rate2m or vector(0)) > 80
    12 |       and on (colo_name)
    13 |         (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: '`vector(0) / vector(1) > 5 * vector(0) / vector(1)` always evaluates to `0 > 0` which is not possible, so it will never return anything.'
          pos:
            - line: 4
              firstcolumn: 7
              lastcolumn: 67
            - line: 5
              firstcolumn: 7
              lastcolumn: 64
            - line: 6
              firstcolumn: 7
              lastcolumn: 83
            - line: 7
              firstcolumn: 7
              lastcolumn: 72
            - line: 8
              firstcolumn: 7
              lastcolumn: 27
            - line: 9
              firstcolumn: 7
              lastcolumn: 25
            - line: 10
              firstcolumn: 7
              lastcolumn: 25
            - line: 11
              firstcolumn: 7
              lastcolumn: 54
            - line: 12
              firstcolumn: 7
              lastcolumn: 25
            - line: 13
              firstcolumn: 7
              lastcolumn: 63
          firstcolumn: 34
          lastcolumn: 42
          kind: 0
    lines:
        first: 4
        last: 13
    severity: 1
    anchor: 0
- description: complex query with or vector()
  content: |4

      - alert: Foo
        expr: |
          (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
            (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
          > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
            avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
          # Multi-line comment
          # inside the query
          and on (colo_name)
            (colo_job:foo_total:rate2m or vector(0)) > 80
          and on (colo_name)
            (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
        annotations:
          summary: High rejectsion rate in {{ $labels.colo_name }}
  output: |4
     4 |       (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
     5 |         (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
     6 |       > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
     7 |         avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
     8 |       # Multi-line comment
     9 |       # inside the query
    10 |       and on (colo_name)
    11 |         (colo_job:foo_total:rate2m or vector(0)) > 80
                                               ^^^^^^ The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
    12 |       and on (colo_name)
    13 |         (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
          pos:
            - line: 4
              firstcolumn: 7
              lastcolumn: 67
            - line: 5
              firstcolumn: 7
              lastcolumn: 64
            - line: 6
              firstcolumn: 7
              lastcolumn: 83
            - line: 7
              firstcolumn: 7
              lastcolumn: 72
            - line: 8
              firstcolumn: 7
              lastcolumn: 27
            - line: 9
              firstcolumn: 7
              lastcolumn: 25
            - line: 10
              firstcolumn: 7
              lastcolumn: 25
            - line: 11
              firstcolumn: 7
              lastcolumn: 54
            - line: 12
              firstcolumn: 7
              lastcolumn: 25
            - line: 13
              firstcolumn: 7
              lastcolumn: 63
          firstcolumn: 354
          lastcolumn: 359
          kind: 0
    lines:
        first: 4
        last: 13
    severity: 1
    anchor: 0
- description: complex query with or vector()
  content: |4

      - alert: Foo
        expr: |
          (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
            (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
          > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
            avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
          # Multi-line comment
          # inside the query
          and on (colo_name)
            (colo_job:foo_total:rate2m or vector(0)) > 80
          and on (colo_name)
            (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
        annotations:
          summary: High rejectsion rate in {{ $labels.colo_name }}
  output: |4
     4 |       (avg(rate(foo_rejections[6h]) or vector(0)) by (colo_name) /
     5 |         (avg(rate(foo_total[6h]) or vector(1)) by (colo_name)))
     6 |       > 5 * (avg(rate(foo_rejections[6h] offset 1d) or vector(0)) by (colo_name) /
     7 |         avg(rate(foo_total[6h] offset 1d) or vector(1)) by (colo_name))
     8 |       # Multi-line comment
     9 |       # inside the query
    10 |       and on (colo_name)
    11 |         (colo_job:foo_total:rate2m or vector(0)) > 80
    12 |       and on (colo_name)
    13 |         (colo_job:foo_total:rate2m offset 1d or vector(0)) > 80
                                                         ^^^^^^ The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `colo_name` label from `on(...)`. Calling `vector()` will return a vector value with no labels.
          pos:
            - line: 4
              firstcolumn: 7
              lastcolumn: 67
            - line: 5
              firstcolumn: 7
              lastcolumn: 64
            - line: 6
              firstcolumn: 7
              lastcolumn: 83
            - line: 7
              firstcolumn: 7
              lastcolumn: 72
            - line: 8
              firstcolumn: 7
              lastcolumn: 27
            - line: 9
              firstcolumn: 7
              lastcolumn: 25
            - line: 10
              firstcolumn: 7
              lastcolumn: 25
            - line: 11
              firstcolumn: 7
              lastcolumn: 54
            - line: 12
              firstcolumn: 7
              lastcolumn: 25
            - line: 13
              firstcolumn: 7
              lastcolumn: 63
          firstcolumn: 431
          lastcolumn: 436
          kind: 0
    lines:
        first: 4
        last: 13
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/foo{job=bar}_unless_sum(foo) - 1]
- description: foo{job=bar} unless sum(foo)
  content: |4

    - alert: Foo
      expr: foo{job="bar"} unless sum(foo)
  output: |
    3 |   expr: foo{job="bar"} unless sum(foo)
                                      ^^^ The right hand side will never be matched because it doesn't have the `job` label while the left hand side will. Query is using aggregation that removes all labels.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `job` label while the left hand side will. Query is using aggregation that removes all labels.
          pos:
            - line: 3
              firstcolumn: 9
              lastcolumn: 38
          firstcolumn: 23
          lastcolumn: 25
          kind: 0
    lines:
        first: 3
        last: 3
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/foo{job=bar}_unless_vector(0) - 1]
- description: foo{job=bar} unless vector(0)
  content: |4

    - alert: Foo
      expr: foo{job="bar"} unless vector(0)
  output: |
    3 |   expr: foo{job="bar"} unless vector(0)
                                      ^^^^^^ The right hand side will never be matched because it doesn't have the `job` label while the left hand side will. Calling `vector()` will return a vector value with no labels.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `job` label while the left hand side will. Calling `vector()` will return a vector value with no labels.
          pos:
            - line: 3
              firstcolumn: 9
              lastcolumn: 39
          firstcolumn: 23
          lastcolumn: 28
          kind: 0
    lines:
        first: 3
        last: 3
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/ignores_rules_with_syntax_errors - 1]
[]

---

[TestImpossibleCheck/or_vector()_labels_are_missing - 1]
- description: or vector() labels are missing
  content: |4

    - alert: Foo
      expr: |
        (
          max(job:writes_total:rate5m{region=~"wnam|weur", job="myjob", cluster=~"(a|b)"} or vector(0)) by(region)
          +
          max(job:skipps_total:rate5m{region=~"wnam|weur", job="myjob", cluster=~"(a|b)"} or vector(0)) by(region)
        ) / sum(rate(records_total{region=~"wnam|weur"}[5m])) by (region) < 0.90
      annotations:
        summary: Throughput in region {{ $labels.region }}
  output: |
    4 |     (
    5 |       max(job:writes_total:rate5m{region=~"wnam|weur", job="myjob", cluster=~"(a|b)"} or vector(0)) by(region)
    6 |       +
    7 |       max(job:skipps_total:rate5m{region=~"wnam|weur", job="myjob", cluster=~"(a|b)"} or vector(0)) by(region)
                                                                                                 ^^^^^^ The right hand side will never be matched because it doesn't have the `region` label while the left hand side will. Calling `vector()` will return a vector value with no labels.
    8 |     ) / sum(rate(records_total{region=~"wnam|weur"}[5m])) by (region) < 0.90
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: The right hand side will never be matched because it doesn't have the `region` label while the left hand side will. Calling `vector()` will return a vector value with no labels.
          pos:
            - line: 4
              firstcolumn: 5
              lastcolumn: 6
            - line: 5
              firstcolumn: 5
              lastcolumn: 111
            - line: 6
              firstcolumn: 5
              lastcolumn: 8
            - line: 7
              firstcolumn: 5
              lastcolumn: 111
            - line: 8
              firstcolumn: 5
              lastcolumn: 76
          firstcolumn: 199
          lastcolumn: 204
          kind: 0
    lines:
        first: 4
        last: 8
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/sum(foo_or_vector(0))_>_0 - 1]
- description: sum(foo or vector(0)) > 0
  content: |4

    - alert: Foo
      expr: sum(foo or vector(0)) > 0
  output: |
    3 |   expr: sum(foo or vector(0)) > 0
                           ^^^^^^^^^ `vector(0) > 0` always evaluates to `0 > 0` which is not possible, so it will never return anything.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: '`vector(0) > 0` always evaluates to `0 > 0` which is not possible, so it will never return anything.'
          pos:
            - line: 3
              firstcolumn: 9
              lastcolumn: 33
          firstcolumn: 12
          lastcolumn: 20
          kind: 0
    lines:
        first: 3
        last: 3
    severity: 1
    anchor: 0

---

[TestImpossibleCheck/vector(0)_>_0 - 1]
- description: vector(0) > 0
  content: |4

    - alert: Foo
      expr: ((( group(vector(0)) ))) > 0
  output: |
    3 |   expr: ((( group(vector(0)) ))) > 0
                          ^^^^^^^^^ `vector(0) > 0` always evaluates to `0 > 0` which is not possible, so it will never return anything.
  problem:
    reporter: promql/impossible
    summary: dead code in query
    details: ""
    diagnostics:
        - message: '`vector(0) > 0` always evaluates to `0 > 0` which is not possible, so it will never return anything.'
          pos:
            - line: 3
              firstcolumn: 9
              lastcolumn: 36
          firstcolumn: 11
          lastcolumn: 19
          kind: 0
    lines:
        first: 3
        last: 3
    severity: 1
    anchor: 0

---
