
[TestRuleDependencyCheck/deduplicates_affected_files - 1]
- description: deduplicates affected files
  content: |
    - record: foo
      expr: sum(foo)
  output: |
    1 | - record: foo
                  ^^^ Metric generated by this rule is used by 5 other rule(s).
  problem:
    reporter: rule/dependency
    summary: rule results used by another rule
    details: |
        If you remove the recording rule generating `foo`, and there is no other source of this metric, then any other rule depending on it will break.
        List of found rules that are using `foo`:

        - `alert` at `alice.yaml:4`
        - `alert` at `alice.yaml:6`
        - `alert` at `bar.yaml:2`
        - `xxx` at `bar.yaml:2`
        - `alert` at `foo.yaml:2`
    diagnostics:
        - message: Metric generated by this rule is used by 5 other rule(s).
          pos:
            - line: 1
              firstcolumn: 11
              lastcolumn: 13
          firstcolumn: 1
          lastcolumn: 3
    lines:
        first: 1
        last: 2
    severity: 1
    anchor: 1

---

[TestRuleDependencyCheck/ignores_alerting_rules - 1]
[]

---

[TestRuleDependencyCheck/ignores_alerts_with_expr_errors - 1]
[]

---

[TestRuleDependencyCheck/ignores_alerts_without_dependencies - 1]
[]

---

[TestRuleDependencyCheck/ignores_re-added_rules - 1]
[]

---

[TestRuleDependencyCheck/ignores_removed_unused_alert - 1]
[]

---

[TestRuleDependencyCheck/ignores_rules_with_errors - 1]
[]

---

[TestRuleDependencyCheck/ignores_rules_with_syntax_errors - 1]
[]

---

[TestRuleDependencyCheck/ignores_unparsable_files - 1]
[]

---

[TestRuleDependencyCheck/includes_alerts_on_other_prometheus_servers - 1]
- description: includes alerts on other prometheus servers
  content: |
    - record: foo
      expr: sum(foo)
  output: |
    1 | - record: foo
                  ^^^ Metric generated by this rule is used by 1 other rule(s).
  problem:
    reporter: rule/dependency
    summary: rule results used by another rule
    details: |
        If you remove the recording rule generating `foo`, and there is no other source of this metric, then any other rule depending on it will break.
        List of found rules that are using `foo`:

        - `alert` at `excluded.yaml:2`
    diagnostics:
        - message: Metric generated by this rule is used by 1 other rule(s).
          pos:
            - line: 1
              firstcolumn: 11
              lastcolumn: 13
          firstcolumn: 1
          lastcolumn: 3
    lines:
        first: 1
        last: 2
    severity: 1
    anchor: 1

---

[TestRuleDependencyCheck/warns_about_removed_alert_used_in_ALERTS_FOR_STATE{} - 1]
- description: warns about removed alert used in ALERTS_FOR_STATE{}
  content: |
    - alert: TargetIsDown
      expr: up == 0
  output: |
    1 | - alert: TargetIsDown
                 ^^^^^^^^^^^^ Metric generated by this rule is used by 1 other rule(s).
  problem:
    reporter: rule/dependency
    summary: rule results used by another rule
    details: |
        If you remove the alerting rule generating `ALERTS_FOR_STATE{alertname="TargetIsDown"}`, and there is no other source of this metric, then any other rule depending on it will break.
        List of found rules that are using `ALERTS_FOR_STATE{alertname="TargetIsDown"}`:

        - `alert:count` at `foo.yaml:3`
    diagnostics:
        - message: Metric generated by this rule is used by 1 other rule(s).
          pos:
            - line: 1
              firstcolumn: 10
              lastcolumn: 21
          firstcolumn: 1
          lastcolumn: 12
    lines:
        first: 1
        last: 2
    severity: 1
    anchor: 1

---

[TestRuleDependencyCheck/warns_about_removed_alert_used_in_ALERTS{} - 1]
- description: warns about removed alert used in ALERTS{}
  content: |
    - alert: TargetIsDown
      expr: up == 0
  output: |
    1 | - alert: TargetIsDown
                 ^^^^^^^^^^^^ Metric generated by this rule is used by 1 other rule(s).
  problem:
    reporter: rule/dependency
    summary: rule results used by another rule
    details: |
        If you remove the alerting rule generating `ALERTS{alertname="TargetIsDown"}`, and there is no other source of this metric, then any other rule depending on it will break.
        List of found rules that are using `ALERTS{alertname="TargetIsDown"}`:

        - `alert:count` at `foo.yaml:3`
    diagnostics:
        - message: Metric generated by this rule is used by 1 other rule(s).
          pos:
            - line: 1
              firstcolumn: 10
              lastcolumn: 21
          firstcolumn: 1
          lastcolumn: 12
    lines:
        first: 1
        last: 2
    severity: 1
    anchor: 1

---

[TestRuleDependencyCheck/warns_about_removed_dependency - 1]
- description: warns about removed dependency
  content: |
    - record: foo
      expr: sum(foo)
  output: |
    1 | - record: foo
                  ^^^ Metric generated by this rule is used by 1 other rule(s).
  problem:
    reporter: rule/dependency
    summary: rule results used by another rule
    details: |
        If you remove the recording rule generating `foo`, and there is no other source of this metric, then any other rule depending on it will break.
        List of found rules that are using `foo`:

        - `alert` at `foo.yaml:2`
    diagnostics:
        - message: Metric generated by this rule is used by 1 other rule(s).
          pos:
            - line: 1
              firstcolumn: 11
              lastcolumn: 13
          firstcolumn: 1
          lastcolumn: 3
    lines:
        first: 1
        last: 2
    severity: 1
    anchor: 1

---

[TestRuleDependencyCheck/warns_about_removed_dependency_without_crashing_if_it_is_not_the_last_rule - 1]
- description: warns about removed dependency without crashing if it is not the last rule
  content: |
    - record: foo
      expr: sum(foo)
  output: |
    1 | - record: foo
                  ^^^ Metric generated by this rule is used by 1 other rule(s).
  problem:
    reporter: rule/dependency
    summary: rule results used by another rule
    details: |
        If you remove the recording rule generating `foo`, and there is no other source of this metric, then any other rule depending on it will break.
        List of found rules that are using `foo`:

        - `alert` at `foo.yaml:2`
    diagnostics:
        - message: Metric generated by this rule is used by 1 other rule(s).
          pos:
            - line: 1
              firstcolumn: 11
              lastcolumn: 13
          firstcolumn: 1
          lastcolumn: 3
    lines:
        first: 1
        last: 2
    severity: 1
    anchor: 1

---
