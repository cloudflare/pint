
[TestGetChecksForRule/rule_with_annotation_match_/_no_annotation - 1]
title: rule with annotation match / no annotation
config: |-
    {
      "ci": {
        "baseBranch": "master",
        "maxCommits": 20
      },
      "parser": {},
      "repository": {},
      "checks": {
        "enabled": [
          "alerts/absent",
          "alerts/annotation",
          "alerts/count",
          "alerts/external_labels",
          "alerts/for",
          "alerts/template",
          "labels/conflict",
          "promql/aggregate",
          "alerts/comparison",
          "promql/impossible",
          "promql/fragile",
          "promql/range_query",
          "promql/rate",
          "promql/regexp",
          "promql/syntax",
          "promql/vector_matching",
          "query/cost",
          "promql/counter",
          "promql/series",
          "rule/dependency",
          "rule/duplicate",
          "rule/for",
          "rule/name",
          "rule/label",
          "rule/link",
          "rule/reject",
          "rule/report"
        ]
      },
      "owners": {},
      "rules": [
        {
          "match": [
            {
              "annotation": {
                "key": "cluster",
                "value": "prod"
              },
              "kind": "alerting"
            }
          ],
          "label": [
            {
              "key": "priority",
              "value": "(1|2|3|4|5)",
              "severity": "bug",
              "required": true
            }
          ]
        }
      ]
    }
entry:
    path:
        name: rules.yml
        symlinktarget: rules.yml
    filecomments: []
    rulecomments: []
checks:
    - promql/syntax
    - alerts/for
    - alerts/comparison
    - alerts/template
    - promql/fragile
    - promql/regexp
    - promql/impossible

---
