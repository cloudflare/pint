
[TestGetChecksForRule/reject_rules - 1]
title: reject rules
config: |-
    {
      "ci": {
        "baseBranch": "master",
        "maxCommits": 20
      },
      "parser": {},
      "repository": {},
      "checks": {
        "enabled": [
          "alerts/absent",
          "alerts/annotation",
          "alerts/count",
          "alerts/external_labels",
          "alerts/for",
          "alerts/template",
          "labels/conflict",
          "promql/aggregate",
          "alerts/comparison",
          "promql/impossible",
          "promql/fragile",
          "promql/range_query",
          "promql/rate",
          "promql/regexp",
          "promql/syntax",
          "promql/vector_matching",
          "query/cost",
          "promql/counter",
          "promql/series",
          "rule/dependency",
          "rule/duplicate",
          "rule/for",
          "rule/name",
          "rule/label",
          "rule/link",
          "rule/reject",
          "rule/report"
        ]
      },
      "owners": {},
      "rules": [
        {
          "reject": [
            {
              "key": "http://.+",
              "label_keys": true,
              "label_values": true
            },
            {
              "key": ".* +.*",
              "comment": "this is rule comment",
              "label_keys": true,
              "annotation_keys": true
            },
            {
              "comment": "this is rule comment",
              "severity": "bug",
              "annotation_values": true
            }
          ]
        }
      ]
    }
entry:
    path:
        name: rules.yml
        symlinktarget: rules.yml
    filecomments: []
    rulecomments: []
checks:
    - promql/syntax
    - alerts/for
    - alerts/comparison
    - alerts/template
    - promql/fragile
    - promql/regexp
    - promql/impossible
    - rule/reject(key=~'^http://.+$')
    - rule/reject(val=~'^http://.+$')
    - rule/reject(key=~'^.* +.*$')
    - rule/reject(val=~'^$')

---
