
[TestLabelsSource/105 - 1]
expr: sum_over_time(foo{job="myjob"}[5m])
output:
    - selector:
        name: foo
        originaloffset: 0s
        originaloffsetexpr: null
        offset: 0s
        timestamp: null
        skiphistogrambuckets: false
        startorend: 0
        labelmatchers:
            - type: 0
              name: job
              value: myjob
            - type: 0
              name: __name__
              value: foo
        unexpandedseriesset: null
        series: []
        bypassemptymatchercheck: false
        posrange:
            start: 14
            end: 30
      call:
        func:
            name: sum_over_time
            argtypes:
                - matrix
            variadic: 0
            returntype: vector
            experimental: false
        args:
            - vectorselector:
                name: foo
                originaloffset: 0s
                originaloffsetexpr: null
                offset: 0s
                timestamp: null
                skiphistogrambuckets: false
                startorend: 0
                labelmatchers:
                    - type: 0
                      name: job
                      value: myjob
                    - type: 0
                      name: __name__
                      value: foo
                unexpandedseriesset: null
                series: []
                bypassemptymatchercheck: false
                posrange:
                    start: 14
                    end: 30
              range: 5m0s
              rangeexpr: null
              endpos: 34
        posrange:
            start: 0
            end: 35
      aggregation: null
      excludereason: {}
      operation: sum_over_time
      isdeadreason: ""
      returns: vector
      joins: []
      unless: []
      includedlabels: []
      excludedlabels: []
      guaranteedlabels:
        - job
      position:
        start: 14
        end: 34
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 4
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false

---
