
[TestLabelsSource/140 - 1]
expr: sum(foo{a="1"}) * on(instance) group_right(c,d) bar{b="2"}
output:
    - labels:
        b:
            reason: Query will only return series where these labels are present.
            fragment:
                start: 48
                end: 58
            kind: guaranteed
        c:
            reason: Query is using one-to-many vector matching with `group_right(c, d)`, all labels included inside `group_right(...)` will be include on the results.
            fragment:
                start: 31
                end: 42
            kind: included
        d:
            reason: Query is using one-to-many vector matching with `group_right(c, d)`, all labels included inside `group_right(...)` will be include on the results.
            fragment:
                start: 31
                end: 42
            kind: included
        instance:
            reason: Query is using one-to-many vector matching with `on(instance)`, labels included inside `on(...)` will be present on the results.
            fragment:
                start: 18
                end: 20
            kind: included
      operation: one-to-many
      isdeadreason: ""
      returns: vector
      joins:
        - labels:
            "":
                reason: Query is using aggregation that removes all labels.
                fragment:
                    start: 0
                    end: 3
                kind: excluded
            __name__:
                reason: Aggregation removes metric name.
                fragment:
                    start: 0
                    end: 15
                kind: excluded
            a:
                reason: Query is using aggregation that removes all labels.
                fragment:
                    start: 0
                    end: 3
                kind: excluded
          operation: sum
          isdeadreason: The left hand side will never be matched because it doesn't have the `instance` label from `on(...)`. Query is using aggregation that removes all labels.
          returns: vector
          joins: []
          unless: []
          position:
            start: 4
            end: 14
          isdeadposition:
            start: 0
            end: 3
          returnednumber: 0
          type: 5
          fixedlabels: true
          isdead: true
          alwaysreturns: false
          knownreturn: false
          isconditional: false
          isreturnbool: false
      unless: []
      position:
        start: 48
        end: 58
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 3
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false

---
