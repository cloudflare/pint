
[TestLabelsSource/46 - 1]
expr: sum(foo{job="myjob"} or bar{cluster="dev"}) without(instance)
output:
    - labels:
        __name__:
            reason: Aggregation removes metric name.
            fragment:
                start: 0
                end: 61
            kind: excluded
        instance:
            reason: Query is using aggregation with `without(instance)`, all labels included inside `without(...)` will be removed from the results.
            fragment:
                start: 44
                end: 51
            kind: excluded
        job:
            reason: Query will only return series where these labels are present.
            fragment:
                start: 4
                end: 20
            kind: guaranteed
      operation: sum
      isdeadreason: ""
      returns: vector
      joins: []
      unless: []
      position:
        start: 4
        end: 20
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 5
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false
    - labels:
        __name__:
            reason: Aggregation removes metric name.
            fragment:
                start: 0
                end: 61
            kind: excluded
        cluster:
            reason: Query will only return series where these labels are present.
            fragment:
                start: 24
                end: 42
            kind: guaranteed
        instance:
            reason: Query is using aggregation with `without(instance)`, all labels included inside `without(...)` will be removed from the results.
            fragment:
                start: 44
                end: 51
            kind: excluded
      operation: sum
      isdeadreason: ""
      returns: vector
      joins: []
      unless: []
      position:
        start: 24
        end: 42
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 5
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false

---
