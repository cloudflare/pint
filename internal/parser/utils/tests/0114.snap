
[TestLabelsSource/114 - 1]
expr: |4-
    sum by (region, target, colo_name) (
        sum_over_time(probe_success{job="abc"}[5m])
     or
     vector(1)
    ) == 0
output:
    - labels:
        "":
            reason: Query is using aggregation with `by(region, target, colo_name)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 5
                end: 8
            kind: excluded
        __name__:
            reason: Aggregation removes metric name.
            fragment:
                start: 1
                end: 102
            kind: excluded
        colo_name:
            reason: Query is using aggregation with `by(region, target, colo_name)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 5
                end: 8
            kind: included
        job:
            reason: Query is using aggregation with `by(region, target, colo_name)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 5
                end: 8
            kind: excluded
        region:
            reason: Query is using aggregation with `by(region, target, colo_name)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 5
                end: 8
            kind: included
        target:
            reason: Query is using aggregation with `by(region, target, colo_name)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 5
                end: 8
            kind: included
      operation: sum
      isdeadreason: ""
      returns: vector
      joins: []
      unless: []
      position:
        start: 56
        end: 84
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 5
      fixedlabels: true
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: true
      isreturnbool: false
    - labels:
        "":
            reason: Query is using aggregation with `by(region, target, colo_name)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 5
                end: 8
            kind: excluded
        __name__:
            reason: Aggregation removes metric name.
            fragment:
                start: 1
                end: 102
            kind: excluded
        colo_name:
            reason: Calling `vector()` will return a vector value with no labels.
            fragment:
                start: 91
                end: 97
            kind: excluded
        region:
            reason: Calling `vector()` will return a vector value with no labels.
            fragment:
                start: 91
                end: 97
            kind: excluded
        target:
            reason: Calling `vector()` will return a vector value with no labels.
            fragment:
                start: 91
                end: 97
            kind: excluded
      operation: sum
      isdeadreason: this query always evaluates to `1 == 0` which is not possible, so it will never return anything
      returns: vector
      joins: []
      unless: []
      position:
        start: 91
        end: 100
      isdeadposition:
        start: 91
        end: 100
      returnednumber: 1
      type: 5
      fixedlabels: true
      isdead: true
      alwaysreturns: true
      knownreturn: true
      isconditional: true
      isreturnbool: false

---
