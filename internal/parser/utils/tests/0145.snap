
[TestLabelsSource/145 - 1]
expr: sum(sum(foo) without(job)) by(job)
output:
    - selector:
        name: foo
        originaloffset: 0s
        originaloffsetexpr: null
        offset: 0s
        timestamp: null
        skiphistogrambuckets: false
        startorend: 0
        labelmatchers:
            - type: 0
              name: __name__
              value: foo
        unexpandedseriesset: null
        series: []
        bypassemptymatchercheck: false
        posrange:
            start: 8
            end: 11
      call: null
      aggregation:
        op: 57414
        expr:
            op: 57414
            expr:
                name: foo
                originaloffset: 0s
                originaloffsetexpr: null
                offset: 0s
                timestamp: null
                skiphistogrambuckets: false
                startorend: 0
                labelmatchers:
                    - type: 0
                      name: __name__
                      value: foo
                unexpandedseriesset: null
                series: []
                bypassemptymatchercheck: false
                posrange:
                    start: 8
                    end: 11
            param: null
            grouping:
                - job
            without: true
            posrange:
                start: 4
                end: 25
        param: null
        grouping:
            - job
        without: false
        posrange:
            start: 0
            end: 34
      excludereason:
        "":
            reason: Query is using aggregation with `by(job)`, only labels included inside `by(...)` will be present on the results.
            fragment:
                start: 27
                end: 29
        __name__:
            reason: Aggregation removes metric name.
            fragment:
                start: 0
                end: 34
        job:
            reason: Query is using aggregation with `without(job)`, all labels included inside `without(...)` will be removed from the results.
            fragment:
                start: 13
                end: 20
      operation: sum
      isdeadreason: ""
      returns: vector
      joins: []
      unless: []
      includedlabels: []
      excludedlabels:
        - job
        - __name__
      guaranteedlabels: []
      position:
        start: 8
        end: 11
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 5
      fixedlabels: true
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false

---
