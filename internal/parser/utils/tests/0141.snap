
[TestLabelsSource/141 - 1]
expr: foo{a="1"} * on(instance) group_left(c,d) sum(bar{b="2"}) without(instance)
output:
    - selector:
        name: foo
        originaloffset: 0s
        originaloffsetexpr: null
        offset: 0s
        timestamp: null
        skiphistogrambuckets: false
        startorend: 0
        labelmatchers:
            - type: 0
              name: a
              value: "1"
            - type: 0
              name: __name__
              value: foo
        unexpandedseriesset: null
        series: []
        bypassemptymatchercheck: false
        posrange:
            start: 0
            end: 10
      labels:
        a:
            reason: Query will only return series where these labels are present.
            fragment:
                start: 0
                end: 10
            kind: guaranteed
        c:
            reason: Query is using many-to-one vector matching with `group_left(c, d)`, all labels included inside `group_left(...)` will be include on the results.
            fragment:
                start: 26
                end: 36
            kind: included
        d:
            reason: Query is using many-to-one vector matching with `group_left(c, d)`, all labels included inside `group_left(...)` will be include on the results.
            fragment:
                start: 26
                end: 36
            kind: included
        instance:
            reason: Query is using many-to-one vector matching with `on(instance)`, labels included inside `on(...)` will be present on the results.
            fragment:
                start: 13
                end: 15
            kind: included
      operation: many-to-one
      isdeadreason: ""
      returns: vector
      joins:
        - selector:
            name: bar
            originaloffset: 0s
            originaloffsetexpr: null
            offset: 0s
            timestamp: null
            skiphistogrambuckets: false
            startorend: 0
            labelmatchers:
                - type: 0
                  name: b
                  value: "2"
                - type: 0
                  name: __name__
                  value: bar
            unexpandedseriesset: null
            series: []
            bypassemptymatchercheck: false
            posrange:
                start: 46
                end: 56
          labels:
            __name__:
                reason: Aggregation removes metric name.
                fragment:
                    start: 42
                    end: 75
                kind: excluded
            b:
                reason: Query will only return series where these labels are present.
                fragment:
                    start: 46
                    end: 56
                kind: guaranteed
            instance:
                reason: Query is using aggregation with `without(instance)`, all labels included inside `without(...)` will be removed from the results.
                fragment:
                    start: 58
                    end: 65
                kind: excluded
          operation: sum
          isdeadreason: The right hand side will never be matched because it doesn't have the `instance` label from `on(...)`. Query is using aggregation with `without(instance)`, all labels included inside `without(...)` will be removed from the results.
          returns: vector
          joins: []
          unless: []
          position:
            start: 46
            end: 56
          isdeadposition:
            start: 58
            end: 65
          returnednumber: 0
          type: 5
          fixedlabels: false
          isdead: true
          alwaysreturns: false
          knownreturn: false
          isconditional: false
          isreturnbool: false
      unless: []
      position:
        start: 0
        end: 10
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 3
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false

---
