
[TestLabelsSource/12 - 1]
expr: (foo or vector(5)) * (vector(2) or bar)
output:
    - selector:
        name: foo
        originaloffset: 0s
        originaloffsetexpr: null
        offset: 0s
        timestamp: null
        skiphistogrambuckets: false
        startorend: 0
        labelmatchers:
            - type: 0
              name: __name__
              value: foo
        unexpandedseriesset: null
        series: []
        bypassemptymatchercheck: false
        posrange:
            start: 1
            end: 4
      call: null
      aggregation: null
      excludereason: {}
      operation: many-to-many
      isdeadreason: ""
      returns: vector
      joins:
        - selector: null
          call:
            func:
                name: vector
                argtypes:
                    - scalar
                variadic: 0
                returntype: vector
                experimental: false
            args:
                - val: 2
                  duration: false
                  posrange:
                    start: 29
                    end: 30
            posrange:
                start: 22
                end: 31
          aggregation: null
          excludereason:
            "":
                reason: Calling `vector()` will return a vector value with no labels.
                fragment:
                    start: 22
                    end: 28
          operation: vector
          isdeadreason: ""
          returns: vector
          joins: []
          unless: []
          includedlabels: []
          excludedlabels: []
          guaranteedlabels: []
          position:
            start: 22
            end: 31
          isdeadposition:
            start: 0
            end: 0
          returnednumber: 2
          type: 4
          fixedlabels: true
          isdead: false
          alwaysreturns: true
          knownreturn: true
          isconditional: false
          isreturnbool: false
        - selector:
            name: bar
            originaloffset: 0s
            originaloffsetexpr: null
            offset: 0s
            timestamp: null
            skiphistogrambuckets: false
            startorend: 0
            labelmatchers:
                - type: 0
                  name: __name__
                  value: bar
            unexpandedseriesset: null
            series: []
            bypassemptymatchercheck: false
            posrange:
                start: 35
                end: 38
          call: null
          aggregation: null
          excludereason: {}
          operation: many-to-many
          isdeadreason: the left hand side always returs something and so the right hand side is never used
          returns: vector
          joins: []
          unless: []
          includedlabels: []
          excludedlabels: []
          guaranteedlabels: []
          position:
            start: 35
            end: 38
          isdeadposition:
            start: 35
            end: 38
          returnednumber: 0
          type: 3
          fixedlabels: false
          isdead: true
          alwaysreturns: false
          knownreturn: false
          isconditional: false
          isreturnbool: false
      unless: []
      includedlabels: []
      excludedlabels: []
      guaranteedlabels: []
      position:
        start: 1
        end: 4
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 3
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: false
      isreturnbool: false
    - selector: null
      call:
        func:
            name: vector
            argtypes:
                - scalar
            variadic: 0
            returntype: vector
            experimental: false
        args:
            - val: 5
              duration: false
              posrange:
                start: 15
                end: 16
        posrange:
            start: 8
            end: 17
      aggregation: null
      excludereason:
        "":
            reason: Calling `vector()` will return a vector value with no labels.
            fragment:
                start: 8
                end: 14
      operation: vector
      isdeadreason: ""
      returns: vector
      joins:
        - selector: null
          call:
            func:
                name: vector
                argtypes:
                    - scalar
                variadic: 0
                returntype: vector
                experimental: false
            args:
                - val: 2
                  duration: false
                  posrange:
                    start: 29
                    end: 30
            posrange:
                start: 22
                end: 31
          aggregation: null
          excludereason:
            "":
                reason: Calling `vector()` will return a vector value with no labels.
                fragment:
                    start: 22
                    end: 28
          operation: vector
          isdeadreason: ""
          returns: vector
          joins: []
          unless: []
          includedlabels: []
          excludedlabels: []
          guaranteedlabels: []
          position:
            start: 22
            end: 31
          isdeadposition:
            start: 0
            end: 0
          returnednumber: 2
          type: 4
          fixedlabels: true
          isdead: false
          alwaysreturns: true
          knownreturn: true
          isconditional: false
          isreturnbool: false
        - selector:
            name: bar
            originaloffset: 0s
            originaloffsetexpr: null
            offset: 0s
            timestamp: null
            skiphistogrambuckets: false
            startorend: 0
            labelmatchers:
                - type: 0
                  name: __name__
                  value: bar
            unexpandedseriesset: null
            series: []
            bypassemptymatchercheck: false
            posrange:
                start: 35
                end: 38
          call: null
          aggregation: null
          excludereason: {}
          operation: many-to-many
          isdeadreason: the left hand side always returs something and so the right hand side is never used
          returns: vector
          joins: []
          unless: []
          includedlabels: []
          excludedlabels: []
          guaranteedlabels: []
          position:
            start: 35
            end: 38
          isdeadposition:
            start: 35
            end: 38
          returnednumber: 0
          type: 3
          fixedlabels: false
          isdead: true
          alwaysreturns: false
          knownreturn: false
          isconditional: false
          isreturnbool: false
      unless: []
      includedlabels: []
      excludedlabels: []
      guaranteedlabels: []
      position:
        start: 8
        end: 17
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 10
      type: 4
      fixedlabels: true
      isdead: false
      alwaysreturns: true
      knownreturn: true
      isconditional: false
      isreturnbool: false

---
