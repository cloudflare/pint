
[TestLabelsSource/89 - 1]
expr: |4-
    (
     sum(foo:sum > 0) without(notify)
     * on(job) group_left(notify)
     job:notify
    )
    and on(job)
    sum(foo:count) by(job) > 20
output:
    - labels:
        __name__:
            reason: Aggregation removes metric name.
            fragment:
                start: 4
                end: 36
            kind: excluded
        job:
            reason: Query is using many-to-many vector matching with `on(job)`, labels included inside `on(...)` will be present on the results.
            fragment:
                start: 40
                end: 42
            kind: included
        notify:
            reason: Query is using many-to-one vector matching with `group_left(notify)`, all labels included inside `group_left(...)` will be include on the results.
            fragment:
                start: 48
                end: 58
            kind: included
      operation: sum
      isdeadreason: ""
      returns: vector
      joins:
        - labels: {}
          operation: ""
          isdeadreason: ""
          returns: vector
          joins: []
          unless: []
          position:
            start: 68
            end: 78
          isdeadposition:
            start: 0
            end: 0
          returnednumber: 0
          type: 3
          fixedlabels: false
          isdead: false
          alwaysreturns: false
          knownreturn: false
          isconditional: false
          isreturnbool: false
        - labels:
            "":
                reason: Query is using aggregation with `by(job)`, only labels included inside `by(...)` will be present on the results.
                fragment:
                    start: 108
                    end: 110
                kind: excluded
            __name__:
                reason: Aggregation removes metric name.
                fragment:
                    start: 93
                    end: 115
                kind: excluded
            job:
                reason: Query is using aggregation with `by(job)`, only labels included inside `by(...)` will be present on the results.
                fragment:
                    start: 108
                    end: 110
                kind: included
          operation: sum
          isdeadreason: ""
          returns: vector
          joins: []
          unless: []
          position:
            start: 97
            end: 106
          isdeadposition:
            start: 0
            end: 0
          returnednumber: 0
          type: 5
          fixedlabels: true
          isdead: false
          alwaysreturns: false
          knownreturn: false
          isconditional: true
          isreturnbool: false
      unless: []
      position:
        start: 8
        end: 15
      isdeadposition:
        start: 0
        end: 0
      returnednumber: 0
      type: 5
      fixedlabels: false
      isdead: false
      alwaysreturns: false
      knownreturn: false
      isconditional: true
      isreturnbool: false

---
